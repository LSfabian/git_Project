TERMINAL O GITBASH ***********************************************************************************************************************
pwd = muestra el nombre de la carpeta actual
clear = limpiar la terminal
crt + u = borra 1 linea
ls = muestra lo que contiene la carpeta
git --version = muestra la version de una aplicacion en este caso de git
ls -l = muestra los permisos del contenido la carpera actual
ls -a = muestra el contenido hasta los ocultos
ls -la = muestra las carpetas 
dir = muestra todos los directorios y archivos dentro del directorios
cd = cambiar de directorio agregandole la ruta o el nombre de la carpeta
cd ../ = navega un directorio atr√°s
. = navega hacia atras
.. = navega hacia atras
mkdir = crea una carpeta la estrcutura es "mkdir nombre_de_la_carpeta"
cp = copiar una carpeta la estructura es "cp nombre_de_la_carpeta_a_copiar nombre_de_la_carpeta_donde_se_copiara"
cd ~ = me manda a la raiz del sistema
mv = mover o remonbrar archivos
-r = indica que se esta seleccionando la carpeta completa y con lo que tenga adentro
rm -r = borra la carpeta la estructura es "rm -r nombre_de_la_carpeta_a_borrar"
vim = crea o abrir un archivo
ESC + :wq = guardar y salir del archivo
cat = visualiza el contenido del archivo
cat -n = muestra el numero de lineas y visualiza el archivo la estructura es "cat -n nombre_del_archivo"
cd ruta_de_la_carpeta_arrastrandola = abre la carpeta de la ruta. la ruta se puede colocar solo arrastarndo la carpeta
*******************************************************************************************************************************************
GIT: Sistema de control de versiones

git config --global user.name "nombre_usuario" = guardar un nombre de nombre_usuario

git.init = inicializa un reporsitorio
git branch nombre_de_la_rama = crea la rama
git checkout -b nombre_de_la_rama = crea una rama
git checkout nombre_de_la_rama = cambia de rama
git brach -D nombre_de_la_rama = borra la rama
git checkout numero_de_id_del_commit = me posiciona en ese commit
git branch -a = muestra la rama en la que estoy
git merge nombre_de_la_rama_que_va_agregar  = fucionar o unir ramas, al estar posicionado en main le agregaria lo de la otra rama
git status = muestra los cambios
git add nombre_del_archivo = agrega el archivo
git add . = agrega todos los archivos
git rm --cached nombre_del_archivo = elimina el archivo del commit
git commit -m "mensaje descriptivo del cambio que se esta haciendo" = agrega el archivo al reporsitorio
git commit --amend -m "Nuevo mensaje del commit." = modifica el ultimo commit
git log = historial de los commit
q = salir despues de git log
git reflog = muestra todos los movimientos
git log --all --graph --decorate = muestra los cambios de todas las ramas

git branch -M main = hace de main la rama principal
git remote add origin https://github.com/LSfabian/git_Project.git = establece una conexion al repositorio en la nube
git push -u origin main = empuja el repositorio a gitHub, con el -u sirve para que cada vez que se vaya a empujar no seria necesario en nombre de la rama es decir asi solo asi = git push

code nombre_de_archivo = abre el archivo en VS. "code ." = abrir en VS la carpeta o archivo
code . nombre de la carpeta = abre la carpeta en VS
git clone url_del_repositorio = clona un repositorio que esta en la nube a local en la carpeta que este posicionado
git clone https://github.com/Vicmi13/master-gangsters-8 = clona un repositorio que esta en la nube a local en la carpeta que este posicionado
git clone -b develop --single-branch https://github.com/Vicmi13/master-gangsters-8 = clona una rama especifica en este caso develop

git fetch = valida que hay de nuevo en el repositorio
git pull origin main = actualizar el repositorio con los cambios que alguien le hizo, debe estar posicionado en la carpeta
